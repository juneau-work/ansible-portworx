---
- name: is px-enterprise version {{ portworx_enterprise_version }} ?
  shell: /opt/pwx/bin/pxctl --version|grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+'
  register: version_res
  ignore_errors: true

- name: sync px-runc
  shell: > 
         docker run 
         --entrypoint /runc-entry-point.sh
         --rm 
         --privileged=true
         -v /opt/pwx:/opt/pwx
         -v /etc/pwx:/etc/pwx
         {{ offline_hub_prefix }}/px-enterprise:{{ portworx_enterprise_version }}
  when: version_res.stdout != portworx_enterprise_version or (not version_res.stdout)
  
- name: generate portworx.service
  shell: > 
         /opt/pwx/bin/px-runc install
         -c {{ portworx_cluster_id }}
         -k {% for item in groups['etcd'] %}etcd://{{ hostvars[item]['inventory_hostname'] }}:2380{% if not loop.last %},{% endif %}{% endfor %}
         -m {{ portworx_manage_interface }}
         -d {{ portworx_data_interface }}
         {% for disk in portworx_disks.split(',') %}
         -s {{ disk }}
         {% endfor %}
         -secret_type kvdb
         -x kubernetes
         -v /var/lib/kubelet:/var/lib/kubelet:shared
  
- name: systemd daemon-reload
  systemd:
    daemon-reload: yes

- name: start portworx
  service: 
    name: portworx
    state: started 
    enabled: yes

- name: ln -vfs /opt/pwx/bin/pxctl /usr/bin/pxctl
  file:
    src: /opt/pwx/bin/pxctl
    dest: /usr/bin/pxctl
    owner: root
    group: root
    mode: 0755
    state: link
